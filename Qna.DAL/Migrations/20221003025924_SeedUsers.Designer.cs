// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Qna.DAL.DBContext;

#nullable disable

namespace Qna.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221003025924_SeedUsers")]
    partial class SeedUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QnA.DbModels.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DownVotes")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("UpVotes")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("QnA.DbModels.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUser");

                    b.HasData(
                        new
                        {
                            Id = "249a987b-6a40-4c77-9ecb-84de821ea9df",
                            Name = "Ahmed",
                            PasswordHash = "AFdDaV7xPSc76LKz37gq7akbcG5TK6hnX//AedyawbPCObpCTCIXEmlX9YXIMn1OMQ=="
                        },
                        new
                        {
                            Id = "81530d90-ff5c-485e-98b4-b6a215a8f86c",
                            Name = "Islam",
                            PasswordHash = "AFdDaV7xPSc76LKz37gq7akbcG5TK6hnX//AedyawbPCObpCTCIXEmlX9YXIMn1OMQ=="
                        },
                        new
                        {
                            Id = "5e227bad-f701-4aa4-899a-f7ff5381ca39",
                            Name = "Mustafa",
                            PasswordHash = "AFdDaV7xPSc76LKz37gq7akbcG5TK6hnX//AedyawbPCObpCTCIXEmlX9YXIMn1OMQ=="
                        },
                        new
                        {
                            Id = "60b0c149-8d64-489a-89dc-81c3d36266e4",
                            Name = "Maha",
                            PasswordHash = "AFdDaV7xPSc76LKz37gq7akbcG5TK6hnX//AedyawbPCObpCTCIXEmlX9YXIMn1OMQ=="
                        },
                        new
                        {
                            Id = "1a0bd150-7dbc-4e10-8143-120823519c4c",
                            Name = "Aya",
                            PasswordHash = "AFdDaV7xPSc76LKz37gq7akbcG5TK6hnX//AedyawbPCObpCTCIXEmlX9YXIMn1OMQ=="
                        });
                });

            modelBuilder.Entity("QnA.DbModels.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuestionRank")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("QnA.DbModels.Vote", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int>("VoteType")
                        .HasColumnType("int");

                    b.HasKey("UserId", "AnswerId");

                    b.HasIndex("AnswerId");

                    b.ToTable("Vote");
                });

            modelBuilder.Entity("QnA.DbModels.Answer", b =>
                {
                    b.HasOne("QnA.DbModels.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QnA.DbModels.AppUser", "User")
                        .WithMany("Answers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QnA.DbModels.Question", b =>
                {
                    b.HasOne("QnA.DbModels.AppUser", "User")
                        .WithMany("Questions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QnA.DbModels.Vote", b =>
                {
                    b.HasOne("QnA.DbModels.Answer", "Answer")
                        .WithMany("Votes")
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QnA.DbModels.AppUser", "User")
                        .WithMany("Votes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QnA.DbModels.Answer", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("QnA.DbModels.AppUser", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Questions");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("QnA.DbModels.Question", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
